Procedure: dot_product(v1: array of IR, v2: array of IR, ps: IR)
Begin
ps := 0;
for i := 0 to length(v1) - 1 do
ps := ps + v1[i] * v2[i];
end for;
End


Algorithm: CheckOrthogonal(v1: array of IR, v2: array of IR) -> orthogonal: boolean
Begin
dot_product(v1, v2, ps);
if ps = 0 then
orthogonal := true;
else
orthogonal := false;
end if;
End


Algorithm: Main()
Begin
n := number of pairs of vectors;
for i := 1 to n do
read v1, v2 from user; // Read the vectors from the user or any other source
orthogonal := CheckOrthogonal(v1, v2);
if orthogonal then
write "Vectors are orthogonal";
else
write "Vectors are not orthogonal";
end if;
end for;
End


Function: dot_product(v1: array of IR, v2: array of IR) -> ps: IR
Begin
ps := 0;
for i := 0 to length(v1) - 1 do
ps := ps + v1[i] * v2[i];
end for;
return ps;
End


Algorithm: CheckOrthogonal(v1: array of IR, v2: array of IR) -> orthogonal: boolean
Begin
ps := dot_product(v1, v2);
if ps = 0 then
orthogonal := true;
else
orthogonal := false;
end if;
End